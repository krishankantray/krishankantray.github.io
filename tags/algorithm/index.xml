<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithm on Krishankant</title><link>/tags/algorithm/</link><description>Recent content in algorithm on Krishankant</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Oct 2021 22:05:57 +0000</lastBuildDate><atom:link href="/tags/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Monotonic Stack based problems</title><link>/posts/monotonic-stack-based-problems/</link><pubDate>Mon, 04 Oct 2021 22:05:57 +0000</pubDate><guid>/posts/monotonic-stack-based-problems/</guid><description>Next Greater Element ( variants ) This problem states that for every index i in the given array, we need to find the element to the right of it which is just greater ( not smaller ) than the elment at i.
Entire list - https://leetcode.com/tag/monotonic-stack/
There are two ways to solve this problem :
Using stack ( this is most popular one ) Without using stack Problems that are based on this concept are :</description><content>&lt;h1 id="next-greater-element--variants-">Next Greater Element ( variants )&lt;/h1>
&lt;p>This problem states that for every index &lt;code>i&lt;/code> in the given array, we need to find the element to the right of it which is just greater ( not smaller ) than the elment at &lt;code>i&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Entire list&lt;/strong> - &lt;a href="https://leetcode.com/tag/monotonic-stack/">https://leetcode.com/tag/monotonic-stack/&lt;/a>&lt;/p>
&lt;p>There are two ways to solve this problem :&lt;/p>
&lt;ul>
&lt;li>Using stack ( this is most popular one )&lt;/li>
&lt;li>Without using stack&lt;/li>
&lt;/ul>
&lt;p>Problems that are based on this concept are :&lt;/p>
&lt;ul>
&lt;li>Next Greater Element I - &lt;a href="https://leetcode.com/problems/next-greater-element-i/">https://leetcode.com/problems/next-greater-element-i/&lt;/a>&lt;/li>
&lt;li>Next Greater Element II : &lt;a href="https://leetcode.com/problems/next-greater-element-ii/">https://leetcode.com/problems/next-greater-element-ii/&lt;/a>&lt;/li>
&lt;li>Next Greater Element III : &lt;a href="https://leetcode.com/problems/next-greater-element-iii/">https://leetcode.com/problems/next-greater-element-iii/&lt;/a>&lt;/li>
&lt;li>Largest Rectangle histogram : &lt;a href="https://leetcode.com/problems/largest-rectangle-in-histogram/">https://leetcode.com/problems/largest-rectangle-in-histogram/&lt;/a>&lt;/li>
&lt;li>Maximal Rectangle : &lt;a href="https://leetcode.com/problems/maximal-rectangle/">https://leetcode.com/problems/maximal-rectangle/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The order of relationship is : &lt;code>NGE&lt;/code> &amp;gt; &lt;code>largest rect histogram&lt;/code> &amp;gt; &lt;code>maximal rectangle&lt;/code>&lt;/p>
&lt;p>&lt;strong>Next Greater Element&lt;/strong> code using stacks :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="color:#75715e">/*
&lt;/span>&lt;span style="color:#75715e"> INPUT : [1,2,1]
&lt;/span>&lt;span style="color:#75715e"> OUTPUT : [2,-1,-1]
&lt;/span>&lt;span style="color:#75715e">*/&lt;/span>
vector&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> nextGreaterElements(vector&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;amp;&lt;/span> nums) {
&lt;span style="color:#66d9ef">int&lt;/span> n &lt;span style="color:#f92672">=&lt;/span> nums.size() ;
vector&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>nge(n);
stack&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>s ;
&lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>n&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>; i&lt;span style="color:#f92672">&amp;gt;=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>; i&lt;span style="color:#f92672">--&lt;/span>){
&lt;span style="color:#66d9ef">if&lt;/span>(s.empty()){
nge[i]&lt;span style="color:#f92672">=-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> ;
}
&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#a6e22e">if&lt;/span>(s.top() &lt;span style="color:#f92672">&amp;gt;=&lt;/span> nums[i]){
nge[i]&lt;span style="color:#f92672">=&lt;/span>s.top() ;
}
&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#a6e22e">if&lt;/span>(s.top()&lt;span style="color:#f92672">&amp;lt;&lt;/span>nums[i]){
&lt;span style="color:#66d9ef">while&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>s.empty() &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> s.top()&lt;span style="color:#f92672">&amp;lt;&lt;/span>nums[i]) s.pop() ;
&lt;span style="color:#66d9ef">if&lt;/span>(s.empty()) nge[i]&lt;span style="color:#f92672">=-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> ;
&lt;span style="color:#66d9ef">else&lt;/span> nge[i]&lt;span style="color:#f92672">=&lt;/span>s.top() ;
}
s.push(nums[i]) ;
}
&lt;span style="color:#66d9ef">return&lt;/span> nge ;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/discuss/339959/One-Pass-O(N)-Time-and-Space">1130. Minimum Cost Tree From Leaf Values&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/sum-of-subarray-minimums/discuss/170750/C++JavaPython-Stack-Solution">907. Sum of Subarray Minimums&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/online-stock-span/discuss/168311/C++JavaPython-O(1)">901. Online Stock Span&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/score-of-parentheses/discuss/141777/C++JavaPython-O(1)-Space">856. Score of Parentheses&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/next-greater-element-ii/discuss/98270/JavaC++Python-Loop-Twice">503. Next Greater Element II&lt;/a>&lt;/p>
&lt;ol start="496">
&lt;li>
&lt;p>Next Greater Element I&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Largest Rectangle in Histogram&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Trapping Rain Water&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Monotonic Stack&lt;/strong> ðŸŒŸ ( read about it )&lt;/p></content></item></channel></rss>